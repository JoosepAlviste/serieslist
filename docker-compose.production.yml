version: '3.4'

services:
  api:
    image: ghcr.io/joosepalviste/serieslist-api:latest
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: production
    ports:
      - '$API_PORT:$API_PORT'
    env_file:
      - .env
      - .env.docker
    depends_on:
      - db
      - redis
    networks:
      - caddy
    labels:
      caddy: api.serieslist.joosep.xyz
      caddy.reverse_proxy: "{{upstreams ${API_PORT}}}"

  api_jobs:
    image: ghcr.io/joosepalviste/serieslist-api:latest
    command: pnpm start:jobs:prod
    env_file:
      - .env
      - .env.docker
    depends_on:
      - db
      - redis
    networks:
      - caddy

  webapp:
    image: ghcr.io/joosepalviste/serieslist-webapp:latest
    build:
      context: .
      dockerfile: apps/webapp/Dockerfile
      target: production
      args:
        VITE_APP_PORT: $VITE_APP_PORT
        VITE_API_URL: $VITE_API_URL
        VITE_API_INTERNAL_URL: $VITE_API_INTERNAL_URL
    ports:
      - '$VITE_APP_PORT:$VITE_APP_PORT'
    env_file:
      - .env
      - .env.docker
    networks:
      - caddy
    labels:
      caddy: serieslist.joosep.xyz
      caddy.reverse_proxy: "{{upstreams ${VITE_APP_PORT}}}"

  db:
    image: postgres:15.2-alpine
    ports:
      - '${DB_PORT}:5432'
    volumes:
      - 'pgdata:/var/lib/postgresql/data'
      - ./bin/create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
    # Make Postgres faster
    # https://github.com/testjavascript/nodejs-integration-tests-best-practices#%EF%B8%8F-4-optimize-your-real-db-for-testing-dont-fake-it
    command: postgres -c fsync=off -c synchronous_commit=off -c full_page_writes=off -c random_page_cost=1.0
    environment:
      POSTGRES_MULTIPLE_DATABASES: ${DB_DB}_test
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DB}
    networks:
      - caddy

  redis:
    image: redis:7.0-alpine
    restart: always
    ports:
      - '$REDIS_PORT:6379'
    volumes:
      - redisdata:/data
    command: redis-server --save 20 1 --loglevel warning --requirepass $REDIS_PASSWORD
    networks:
      - caddy

volumes:
  pgdata:
  redisdata:

networks:
  caddy:
    external: true
